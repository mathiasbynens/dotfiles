[user]
    name = Artem Vitiuk
    email = artem@vitiuk.me

[alias]
    # View the SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph

    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    type = cat-file -t
    dump = cat-file -p
    dv = difftool

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # Clone a repository including all submodules
    c = clone --recursive
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    remotes = remote -v
    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

[core]
    # Use custom `.gitignore` and `.gitattributes`
    editor = vim
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    pager = diff-so-fancy | less --tabs=1,5 -R

[color]
    # Use colors in Git commands that are capable of colored output when outputting to the terminal
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[color "diff-highlight"]
    oldNormal = "red bold"
    oldHighlight = "red bold 52"
    newNormal = "green bold"
    newHighlight = "green bold 22"
[diff]
    tool = diffmerge
[difftool "diffmerge"]
    cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
    tool = diffmerge
[mergetool "diffmerge"]
    cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
    trustExitCode = true

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
    remote = origin
    merge = refs/heads/master

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    insteadOf = https://github.com/
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"
[filter "media"]
    clean = git-media-clean %f
    smudge = git-media-smudge %f
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
