[user]
	name = Artem Vitiuk
	email = artem@devart.in.ua
[alias]
	# View the SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph

	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	dv = difftool

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Clone a repository including all submodules
	c = clone --recursive
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	remotes = remote -v
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# Undo a `git push`
	undopush = push -f origin HEAD^:master

# Detect whitespace errors when applying a patch (is not safe)
## [apply]
##	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	editor = vim
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
##	whitespace = fix,space-before-tab,tab-in-indent,trailing-space

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[diff]
	tool = diffmerge
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = diffmerge
[mergetool "diffmerge"]
	cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
	remote = origin
	merge = refs/heads/master

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
	insteadOf = "gist:"
