# ANSI Colors
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
    BLACK=$(tput setaf 0)
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    YELLOW=$(tput setaf 3)
    BLUE=$(tput setaf 4)
    MAGENTA=$(tput setaf 5)
    CYAN=$(tput setaf 6)
    WHITE=$(tput setaf 7)

    BOLD=$(tput bold)
    RESET=$(tput sgr0)
    tput sgr0
else
    BLACK="\033[1;30m"
    RED="\033[1;31m"
    GREEN="\033[1;32m"
    YELLOW="\033[1;33m"
    BLUE="\033[1;34m"
    MAGENTA="\033[1;35m"
    CYAN="\033[1;36m"
    WHITE="\033[1;37m"

    BOLD=""
    RESET="\033[m"
fi

export BLACK
export RED
export GREEN
export YELLOW
export BLUE
export MAGENTA
export CYAN
export WHITE

export BOLD
export RESET

# Helpers
function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

export PROMPT_COMMAND="exit_code=\$?"

# Base prompt: user + git info
PS1="\[$CYAN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] \
        && echo \" on \")\[$MAGENTA\]\$(parse_git_branch)\[$RESET\]\n"

# Return status
export PS1="${PS1}\$([[ \$exit_code == 0 ]] \
            && echo \"\[$GREEN\]✔\" || echo \"\[$RED\]✗\") \[$RESET\]"

export PS2="\[$ORANGE\]→ \[$RESET\]"